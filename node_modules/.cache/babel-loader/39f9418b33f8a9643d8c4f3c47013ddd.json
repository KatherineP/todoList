{"ast":null,"code":"var _jsxFileName = \"/Users/katerynaprokofieva/Desktop/reactapp/todo/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport AppFilter from '../item-status-filter';\nimport AddItem from '../add-item';\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.randomIndex = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Drink milk'), this.createTodoItem('Drink tea'), this.createTodoItem('Learn React')]\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const result = todoData.filter(el => el.id !== id);\n        return {\n          todoData: result\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newElement = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        let newArr = [...todoData, newElement];\n        console.log(newArr);\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = todoData.map(item => {\n          if (item.id === id) {\n            // return { \n            //   ...item,\n            //   'important': !item['important']\n            //  }\n            item['important'] = !item['important'];\n          }\n\n          return item;\n        });\n        console.log(newArr);\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label: label,\n      important: false,\n      done: false,\n      id: this.randomIndex++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    let newArr = arr.map(el => {\n      if (el.id === id) {\n        el[propName] = !el[propName];\n      }\n\n      console.log(el);\n      return el;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      toDo: 1,\n      done: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AppFilter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(TodoList, {\n      todos: this.state.todoData,\n      onDeleted: id => this.deleteItem(id),\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddItem, {\n      onAdded: text => this.addItem(text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n;\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/katerynaprokofieva/Desktop/reactapp/todo/src/components/app/app.js"],"names":["React","Component","ReactDOM","AppHeader","SearchPanel","TodoList","AppFilter","AddItem","App","randomIndex","state","todoData","createTodoItem","deleteItem","id","setState","result","filter","el","addItem","text","newElement","newArr","console","log","onToggleImportant","map","item","onToggleDone","toggleProperty","label","important","done","arr","propName","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport AppFilter from '../item-status-filter';\nimport AddItem from '../add-item';\nimport './app.css';\n\nexport default class App extends Component {\n  randomIndex = 100;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Drink milk'),\n      this.createTodoItem('Drink tea'),\n      this.createTodoItem('Learn React'),\n    ]\n  };\n\n  createTodoItem(label) {\n    return {\n        label: label,\n        important: false,\n        done: false,\n        id: this.randomIndex++,\n    }\n  }\n\n  toggleProperty(arr, id, propName) {\n    let newArr = \narr.map(el => {\n      if (el.id === id) {\n        el[propName] = !el[propName]\n      }\n      console.log(el);\n      return el;\n    });\n  };\n\n  deleteItem = (id) => {\n    this.setState(({todoData}) => {\n      const result = todoData.filter(el => el.id !== id);\n      return {\n        todoData: result,\n      };\n    });\n  };\n\n  addItem = (text) => {\n      const newElement = this.createTodoItem(text);\n      this.setState(({todoData}) => {\n      let newArr = [...todoData, newElement];\n      console.log(newArr);\n\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  // onToggleImportant = (id) => {\n  //   this.setState(({todoData}) => {\n  //     return {\n  //       todoData:\n  //         this.toggleProperty(todoData, id, 'important'),\n  //     }\n  //   })\n  // };\n  onToggleImportant = (id) =>  {\n    this.setState(({todoData}) => {\n    const newArr = todoData.map(item => {\n      if ( item.id === id ) { \n        // return { \n        //   ...item,\n        //   'important': !item['important']\n        //  }\n        item['important'] = !item['important'];\n      } \n       return item \n    });\n    console.log(newArr);\n    return {\n      todoData: newArr,\n    }\n    });\n    };\n\n  onToggleDone = (id) => {\n    this.setState(({todoData}) => {\n      return {\n        todoData:\n          this.toggleProperty(todoData, id, 'done')\n      }\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={1} done={3} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel />\n          <AppFilter />\n        </div>\n  \n        <TodoList todos={this.state.todoData}\n        onDeleted={(id) => this.deleteItem(id)}\n        onToggleImportant={this.onToggleImportant}\n        onToggleDone={this.onToggleDone}\n        />\n        <AddItem onAdded ={(text) => this.addItem(text)}/>\n      </div>\n    );\n  }\n};\n\nReactDOM.render(<App />, \n  document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}