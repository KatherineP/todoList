{"ast":null,"code":"var _jsxFileName = \"/Users/katerynaprokofieva/Desktop/reactapp/todo/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport AppFilter from '../item-status-filter';\nimport AddItem from '../add-item';\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.randomIndex = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Drink milk'), this.createTodoItem('Drink tea'), this.createTodoItem('Learn React')],\n      term: '',\n      all: true,\n      active: false,\n      done: false\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const result = todoData.filter(el => el.id !== id);\n        return {\n          todoData: result\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newElement = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        let newArr = [...todoData, newElement];\n        console.log(newArr);\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.searchItems = term => {\n      this.setState({\n        term\n      });\n    };\n\n    this.showDoneTasks = doneFilterState => {\n      this.ser; // this.setState(({todoData}) => {\n      //   const result = todoData.filter(el => el.id !== id);\n      //   return {\n      //     todoData: result,\n      //   };\n      // });\n    };\n\n    this.showAllTasks = () => {\n      console.log('all');\n    };\n\n    this.showActiveTasks = () => {\n      console.log('active');\n    };\n\n    this.search = (arrItems, term) => {\n      if (term.length === 0) {\n        return arrItems;\n      }\n\n      const arr = arrItems.filter(el => {\n        return el.label.toLowerCase().includes(term.toLowerCase());\n      });\n      return arr;\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const arr = this.toggleProperty(todoData, id, 'important');\n        return {\n          todoData: arr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const arr = this.toggleProperty(todoData, id, 'done');\n        return {\n          todoData: arr\n        };\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label: label,\n      important: false,\n      done: false,\n      id: this.randomIndex++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    return arr.map(el => {\n      if (el.id === id) {\n        // return { \n        //   ...el,\n        //   'important': !el['important']\n        //  }\n        el[propName] = !el[propName];\n      }\n\n      return el;\n    });\n  }\n\n  render() {\n    const {\n      todoData,\n      term\n    } = this.state;\n    const visibleItems = this.search(todoData, term);\n    const doneCount = todoData.filter(item => item.done).length;\n    const todoCount = todoData.length - doneCount;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: doneCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchPanel, {\n      onSearchInput: text => this.searchItems(text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AppFilter, {\n      onAllItemsFilter: this.showAllTasks,\n      onDoneItemsFilter: doneFilterState => this.showDoneTasks(doneFilterState),\n      onActiveItemsFilter: this.showActiveTasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(TodoList, {\n      todos: visibleItems,\n      onDeleted: id => this.deleteItem(id),\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddItem, {\n      onAdded: text => this.addItem(text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n;\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/katerynaprokofieva/Desktop/reactapp/todo/src/components/app/app.js"],"names":["React","Component","ReactDOM","AppHeader","SearchPanel","TodoList","AppFilter","AddItem","App","randomIndex","state","todoData","createTodoItem","term","all","active","done","deleteItem","id","setState","result","filter","el","addItem","text","newElement","newArr","console","log","searchItems","showDoneTasks","doneFilterState","ser","showAllTasks","showActiveTasks","search","arrItems","length","arr","label","toLowerCase","includes","onToggleImportant","toggleProperty","onToggleDone","important","propName","map","render","visibleItems","doneCount","item","todoCount","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport AppFilter from '../item-status-filter';\nimport AddItem from '../add-item';\nimport './app.css';\n\nexport default class App extends Component {\n  randomIndex = 100;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Drink milk'),\n      this.createTodoItem('Drink tea'),\n      this.createTodoItem('Learn React'),\n    ],\n    term: '',\n    all: true,\n    active: false,\n    done: false,\n  };\n\n  createTodoItem(label) {\n    return {\n        label: label,\n        important: false,\n        done: false,\n        id: this.randomIndex++,\n    }\n  }\n\n  toggleProperty(arr, id, propName) {\n    return arr.map(el => {\n      if (el.id === id) {\n        // return { \n        //   ...el,\n        //   'important': !el['important']\n        //  }\n        el[propName] = !el[propName]\n      }\n      return el;\n    });\n  };\n\n  deleteItem = (id) => {\n    this.setState(({todoData}) => {\n      const result = todoData.filter(el => el.id !== id);\n      return {\n        todoData: result,\n      };\n    });\n  };\n\n  addItem = (text) => {\n      const newElement = this.createTodoItem(text);\n      this.setState(({todoData}) => {\n      let newArr = [...todoData, newElement];\n      console.log(newArr);\n\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  searchItems = (term) => {\n    this.setState({ term });\n  }\n\n\n\n  showDoneTasks = (doneFilterState) => {\n    this.ser\n\n    // this.setState(({todoData}) => {\n    //   const result = todoData.filter(el => el.id !== id);\n    //   return {\n    //     todoData: result,\n    //   };\n    // });\n\n  }\n  showAllTasks = () => {\n    console.log('all');\n  }\n  showActiveTasks = () => {\n    console.log('active');\n  }\n\n  search = (arrItems, term) => {\n    if(term.length === 0) {\n      return arrItems;\n    }\n    const arr = arrItems.filter((el) => {\n      return el.label.toLowerCase().includes(term.toLowerCase())\n    });\n    return arr;\n  };\n\n  onToggleImportant = (id) =>  {\n    this.setState(({todoData}) => {\n      const arr = this.toggleProperty(todoData, id, 'important');\n      return {\n        todoData: arr,\n      }\n    });\n    };\n\n  onToggleDone = (id) => {\n    this.setState(({todoData}) => {\n      const arr = this.toggleProperty(todoData, id, 'done');\n      return {\n        todoData: arr,\n      }\n    });\n  };\n\n  render() {\n\n    const {todoData, term} = this.state;\n    const visibleItems = this.search(todoData, term);\n\n    const doneCount = todoData.filter((item) => item.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel onSearchInput={(text) => this.searchItems(text)}/>\n          <AppFilter onAllItemsFilter={this.showAllTasks}\n                      onDoneItemsFilter={(doneFilterState) => this.showDoneTasks(doneFilterState)}\n                      onActiveItemsFilter={this.showActiveTasks}/>\n        </div>\n  \n        <TodoList todos={visibleItems}\n        onDeleted={(id) => this.deleteItem(id)}\n        onToggleImportant={this.onToggleImportant}\n        onToggleDone={this.onToggleDone}\n        />\n        <AddItem onAdded ={(text) => this.addItem(text)}/>\n      </div>\n    );\n  }\n};\n\nReactDOM.render(<App />, \n  document.getElementById('root'));\n\n"]},"metadata":{},"sourceType":"module"}