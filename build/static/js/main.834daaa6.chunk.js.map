{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/index.js","components/add-item/add-item.js","components/app/app.js","components/app/index.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","text","onLabelChange","e","target","value","setState","props","onSearchInput","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","type","TodoList","todos","elements","map","item","id","itemProps","key","AppFilter","buttons","name","onFilter","innerText","toLowerCase","filter","clazz","AddItem","event","onSubmit","preventDefault","onAdded","App","randomIndex","todoData","createTodoItem","term","deleteItem","el","addItem","newElement","newArr","console","log","searchItems","applyFilter","filterValue","search","arrItems","length","includes","toggleProperty","arr","propName","items","visibleItems","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.834daaa6.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n        <h1>Todo List</h1>\n        <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;","import SearchPanel from './search-panel';\n\nexport default SearchPanel;","import React, {Component} from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    text: '',\n  }\n\n  onLabelChange = (e) => {\n    const text = e.target.value;\n    this.setState({ text }); //update this.state.text\n    this.props.onSearchInput(text);\n  }\n\n  render() { \n    return <input className=\"search-input\" placeholder=\"search\"\n            onChange={this.onLabelChange}\n            value={this.state.text} />;\n  }\n };\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;","import React from 'react';\nimport './todo-list-item.css';\n\nconst TodoListItem = ({ label, onDeleted, onToggleImportant, onToggleDone, done, important }) => {\n\n    let classNames = 'todo-list-item';\n    if(done) {\n      classNames += ' done';\n    }\n\n    if(important) {\n      classNames += ' important';\n    }\n\n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={onToggleDone} >\n          {label}\n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onToggleImportant}>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  };\n\nexport default TodoListItem;","import React from 'react';\nimport './todo-list.css';\nimport TodoListItem from '../todo-list-item';\n\nconst TodoList = ( { todos, onDeleted,\n                    onToggleImportant, onToggleDone} ) => {             \n\n  const elements = todos.map((item) => {\n    const {id, ...itemProps} = item;\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem {...itemProps}\n        onDeleted={() => onDeleted(id)}\n        onToggleImportant={() => onToggleImportant(id)}\n        onToggleDone={() => onToggleDone(id)}\n         />\n      </li>\n    );\n  });\n  return (\n    <ul className=\"list-group todo-list\">\n      {elements}\n    </ul>\n  );\n};\n\nexport default TodoList;","import AppFilter from './item-status-filter';\n\nexport default AppFilter;","import React, { Component } from 'react';\nimport './item-status-filter.css';\n\nexport default class AppFilter extends Component {\n\n  buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' },\n  ];\n  onFilter = (e) => {\n    this.props.onFilter(e.target.innerText.toLowerCase());\n  }\n\n  render() {\n    const { filter } = this.props;\n\n    const buttons = this.buttons.map(({name, label}) => {\n        const isActive = filter === name;\n        const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n        return <button type=\"button\" className={`btn ${clazz}`} key={name} onClick={this.onFilter}>{label}</button>\n    });\n\n    return (\n    <div className=\"btn-group\">\n     {buttons}\n    </div>\n    );\n  }\n};","import AddItem from './add-item';\n\nexport default AddItem;","import React, { Component } from 'react';\nimport './add-item.css';\n\nexport default class AddItem extends Component {\n\n  state = {\n    label: '',\n  }\n\n  onLabelChange = (event) => {\n    this.setState({\n      label: event.target.value,\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAdded(this.state.label);\n    this.setState({\n      label: '',\n    })\n };\n\n\n  render() {\n    return (\n<form className=\"input-group mb-3 add-item\"\n      onSubmit={this.onSubmit}>\n  <input type=\"text\" className=\"form-control\" placeholder=\"Add your Item\"\n        onChange={this.onLabelChange} value={this.state.label} />\n  <button className=\"btn btn-success\" type=\"submit\">Add</button>\n</form>\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list/todo-list';\nimport AppFilter from '../item-status-filter';\nimport AddItem from '../add-item';\nimport './app.css';\n\nexport default class App extends Component {\n  randomIndex = 100;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Drink milk'),\n      this.createTodoItem('Drink tea'),\n      this.createTodoItem('Learn React'),\n    ],\n    term: '',\n    filter: 'all',\n  };\n\n  createTodoItem(label) {\n    return {\n        label: label,\n        important: false,\n        done: false,\n        id: this.randomIndex++,\n    }\n  }\n\n  toggleProperty(arr, id, propName) {\n    return arr.map(el => {\n      if (el.id === id) {\n        // return { \n        //   ...el,\n        //   'important': !el['important']\n        //  }\n        el[propName] = !el[propName]\n      }\n      return el;\n    });\n  };\n\n  deleteItem = (id) => {\n    this.setState(({todoData}) => {\n      const result = todoData.filter(el => el.id !== id);\n      return {\n        todoData: result,\n      };\n    });\n  };\n\n  addItem = (text) => {\n      const newElement = this.createTodoItem(text);\n      this.setState(({todoData}) => {\n      let newArr = [...todoData, newElement];\n      console.log(newArr);\n\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  searchItems = (term) => {\n    this.setState({ term });\n  }\n\n  applyFilter = (filterValue) => {\n    this.setState({ filter: filterValue });\n  };\n\n  filter (items, filter) {\n    switch(filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.done)\n      case 'done':\n        return items.filter((item) => item.done)\n        default:\n        return items\n    }\n  }\n\n  search = (arrItems, term) => {\n    if(term.length === 0) {\n      return arrItems;\n    }\n    return arrItems.filter((el) => {\n      return el.label.toLowerCase().includes(term.toLowerCase());\n    })\n  };\n\n  onToggleImportant = (id) =>  {\n    this.setState(({todoData}) => {\n      const arr = this.toggleProperty(todoData, id, 'important');\n      return {\n        todoData: arr,\n      }\n    });\n    };\n\n  onToggleDone = (id) => {\n    this.setState(({todoData}) => {\n      const arr = this.toggleProperty(todoData, id, 'done');\n      return {\n        todoData: arr,\n      }\n    });\n  };\n\n  render() {\n\n    const {todoData, term, filter} = this.state;\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n\n    const doneCount = todoData.filter((item) => item.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel onSearchInput={(text) => this.searchItems(text)}/>\n          <AppFilter filter={filter} onFilter={(filterValue) => this.applyFilter(filterValue)}/>\n        </div>\n  \n        <TodoList todos={visibleItems}\n        onDeleted={(id) => this.deleteItem(id)}\n        onToggleImportant={this.onToggleImportant}\n        onToggleDone={this.onToggleDone}\n        />\n        <AddItem onAdded ={(text) => this.addItem(text)}/>\n      </div>\n    );\n  }\n};\n\nReactDOM.render(<App />, \n  document.getElementById('root'));\n\n","import App from './app';\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, \n  document.getElementById('root'));\n"],"sourceRoot":""}